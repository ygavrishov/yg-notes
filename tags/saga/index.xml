<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Saga on Заметки о технологиях</title><link>https://ygavrishov.github.io/yg-notes/tags/saga/</link><description>Recent content in Saga on Заметки о технологиях</description><generator>Hugo</generator><language>ru-ru</language><lastBuildDate>Fri, 15 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ygavrishov.github.io/yg-notes/tags/saga/index.xml" rel="self" type="application/rss+xml"/><item><title>Паттерн Saga c использованием MassTransit</title><link>https://ygavrishov.github.io/yg-notes/post/mass-transit-saga/</link><pubDate>Fri, 15 Aug 2025 00:00:00 +0000</pubDate><guid>https://ygavrishov.github.io/yg-notes/post/mass-transit-saga/</guid><description>&lt;p>В этой статье кратко о том, что такое Saga, и как с ней работать в MassTransit на платформе .NET.&lt;/p>
&lt;p>Преимущества микросервисов оборачиваются и некоторой сложностью: поскольку каждый микросервис имеет свою базу данных, то у нас нет возможности атомарно выполнить транзакцию, касающуюся нескольких микросервисов. На помощь приходит паттерн Saga, которая позволяет разбить долго живущую транзакцию (long-living transaction, LLT) на несколько простых шагов. Каждый из шагов выполняется атомарно и может выполняться в разных сервисах. Сага считается завершенной, если все шаги завершились успешно. Если один из шагов не был успешен, то для ранее выполненных шагов возможно выполнить компенсационные транзакции.&lt;/p></description></item></channel></rss>